// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  lastname String
  username String  @unique
  password String
  role     Role    @default(USER)
  Loans    Loans[]
}

model Areas {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  Books Books[]
}

model Books {
  id          Int        @id @default(autoincrement())
  title       String     @unique
  ISBN        String     @unique
  quantity    Int        @default(1) @db.UnsignedTinyInt
  releaseDate DateTime   @db.Date
  description String?
  imageURL    String?
  areaId      Int
  area        Areas      @relation(fields: [areaId], references: [id])
  author      Authors    @relation(fields: [authorId], references: [id])
  authorId    Int
  editorial   Editorials @relation(fields: [editorialId], references: [id])
  editorialId Int
  genre       Genres     @relation(fields: [genreId], references: [id])
  genreId     Int
  loans       Loans[]
}

model Authors {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(50)
  lastname String  @db.VarChar(50)
  Books    Books[]
}

model Editorials {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  address String? @db.VarChar(255)
  phone   String? @db.VarChar(255)
  Books   Books[]
}

model Genres {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  Books Books[]
}

model Loans {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  bookId     Int
  book       Books    @relation(fields: [bookId], references: [id])
  loanDate   DateTime @default(now())
  returnDate DateTime
}
